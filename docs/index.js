// Generated by purs bundle 0.14.0
var PS = {};
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Control.Category"] = $PS["Control.Category"] || {};
  var exports = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];                
  var Category = function (Semigroupoid0, identity) {
      this.Semigroupoid0 = Semigroupoid0;
      this.identity = identity;
  };
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];                 
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  exports["Functor"] = Functor;
  exports["map"] = map;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];            
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applySecond"] = applySecond;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];          
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];                 
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];                
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS);
(function(exports) {
  "use strict";

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var $foreign = $PS["Data.Array"];
  var $$null = function (xs) {
      return $foreign.length(xs) === 0;
  };
  exports["null"] = $$null;
})(PS);
(function(exports) {
  "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];                 
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Monoid"] = $PS["Data.Monoid"] || {};
  var exports = $PS["Data.Monoid"];
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["mempty"] = mempty;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Semigroup"] = $PS["Data.Semigroup"] || {};
  var exports = $PS["Data.Semigroup"];
  var append = function (dict) {
      return dict.append;
  };
  exports["append"] = append;
})(PS);
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Foldable"] = $PS["Data.Foldable"] || {};
  var exports = $PS["Data.Foldable"];
  var $foreign = $PS["Data.Foldable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];                
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)((function () {
                  var $311 = Control_Apply.applySecond(dictApplicative.Apply0());
                  return function ($312) {
                      return $311(f($312));
                  };
              })())(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  }; 
  var foldableMaybe = new Foldable(function (dictMonoid) {
      return function (f) {
          return function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return Data_Monoid.mempty(dictMonoid);
              };
              if (v instanceof Data_Maybe.Just) {
                  return f(v.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [ f.constructor.name, v.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(z)(v1.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(v1.value0)(z);
              };
              throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  });
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  exports["foldl"] = foldl;
  exports["traverse_"] = traverse_;
  exports["foldableArray"] = foldableArray;
  exports["foldableMaybe"] = foldableMaybe;
})(PS);
(function(exports) {
  /* eslint-disable no-eq-null, eqeqeq */

  "use strict";          

  exports.nullable = function (a, r, f) {
    return a == null ? r : f(a);
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Nullable"] = $PS["Data.Nullable"] || {};
  var exports = $PS["Data.Nullable"];
  var $foreign = $PS["Data.Nullable"];
  var Data_Maybe = $PS["Data.Maybe"];                                   
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;
})(PS);
(function(exports) {
  "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var $foreign = $PS["Data.Show"];
  var Show = function (show) {
      this.show = show;
  };                                                 
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };
  exports["show"] = show;
  exports["showInt"] = showInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Tuple"] = $PS["Data.Tuple"] || {};
  var exports = $PS["Data.Tuple"];                 
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  exports["Tuple"] = Tuple;
})(PS);
(function(exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];                    
  var monadEffect = new Control_Monad.Monad(function () {
      return applicativeEffect;
  }, function () {
      return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
      return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
      return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
      return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  exports["functorEffect"] = functorEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
})(PS);
(function($PS) {
  
  // SPDX-License-Identifier: MIT
  // Copyright (c) 2021 Chua Hou
  //
  // Representation of a winning mahjong hand. Does not include kokushi musou, as
  // the focus is on training scoring (scoring kokushi musou is easy but will be
  // bloat here).
  "use strict";
  $PS["Mahjong.Hand"] = $PS["Mahjong.Hand"] || {};
  var exports = $PS["Mahjong.Hand"];
  var Data_Tuple = $PS["Data.Tuple"];                

  // Tiles --
  // | Types of tiles.
  var Manzu = (function () {
      function Manzu(value0) {
          this.value0 = value0;
      };
      Manzu.create = function (value0) {
          return new Manzu(value0);
      };
      return Manzu;
  })();

  // Tiles --
  // | Types of tiles.
  var Pinzu = (function () {
      function Pinzu(value0) {
          this.value0 = value0;
      };
      Pinzu.create = function (value0) {
          return new Pinzu(value0);
      };
      return Pinzu;
  })();

  // Tiles --
  // | Types of tiles.
  var Souzu = (function () {
      function Souzu(value0) {
          this.value0 = value0;
      };
      Souzu.create = function (value0) {
          return new Souzu(value0);
      };
      return Souzu;
  })();

  // Tiles --
  // | Types of tiles.
  var East = (function () {
      function East() {

      };
      East.value = new East();
      return East;
  })();

  // Tiles --
  // | Types of tiles.
  var South = (function () {
      function South() {

      };
      South.value = new South();
      return South;
  })();

  // Tiles --
  // | Types of tiles.
  var West = (function () {
      function West() {

      };
      West.value = new West();
      return West;
  })();

  // Tiles --
  // | Types of tiles.
  var North = (function () {
      function North() {

      };
      North.value = new North();
      return North;
  })();

  // Tiles --
  // | Types of tiles.
  var White = (function () {
      function White() {

      };
      White.value = new White();
      return White;
  })();

  // Tiles --
  // | Types of tiles.
  var Green = (function () {
      function Green() {

      };
      Green.value = new Green();
      return Green;
  })();

  // Tiles --
  // | Types of tiles.
  var Red = (function () {
      function Red() {

      };
      Red.value = new Red();
      return Red;
  })();

  // Tatsu --
  // | A tatsu to be completed into mentsu with the winning tile.
  var Ryanmen = (function () {
      function Ryanmen(value0) {
          this.value0 = value0;
      };
      Ryanmen.create = function (value0) {
          return new Ryanmen(value0);
      };
      return Ryanmen;
  })();

  // Mentsu --
  // | A single complete mentsu.
  var Shuntsu = (function () {
      function Shuntsu(value0) {
          this.value0 = value0;
      };
      Shuntsu.create = function (value0) {
          return new Shuntsu(value0);
      };
      return Shuntsu;
  })();

  // | Winning mahjong hand.
  var Hand = (function () {
      function Hand(value0, value1, value2, value3, value4) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
      };
      Hand.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return new Hand(value0, value1, value2, value3, value4);
                      };
                  };
              };
          };
      };
      return Hand;
  })();

  // | Create an open mentsu.
  var open = Data_Tuple.Tuple.create(true);

  // | Create a closed mentsu.
  var closed = Data_Tuple.Tuple.create(false);
  exports["Manzu"] = Manzu;
  exports["Pinzu"] = Pinzu;
  exports["Souzu"] = Souzu;
  exports["East"] = East;
  exports["South"] = South;
  exports["West"] = West;
  exports["North"] = North;
  exports["White"] = White;
  exports["Green"] = Green;
  exports["Red"] = Red;
  exports["Shuntsu"] = Shuntsu;
  exports["Ryanmen"] = Ryanmen;
  exports["closed"] = closed;
  exports["open"] = open;
  exports["Hand"] = Hand;
})(PS);
(function(exports) {
  "use strict";

  exports.setClassName = function (className) {
    return function (node) {
      return function () {
        node.className = className;
      };
    };
  };

  exports.setAttribute = function (name) {
    return function (value) {
      return function (element) {
        return function () {
          element.setAttribute(name, value);
        };
      };
    };
  };
})(PS["Web.DOM.Element"] = PS["Web.DOM.Element"] || {});
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Unsafe.Coerce"] = $PS["Unsafe.Coerce"] || {};
  var exports = $PS["Unsafe.Coerce"];
  var $foreign = $PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Web.DOM.Element"] = $PS["Web.DOM.Element"] || {};
  var exports = $PS["Web.DOM.Element"];
  var $foreign = $PS["Web.DOM.Element"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                   
  var toNode = Unsafe_Coerce.unsafeCoerce;
  exports["toNode"] = toNode;
  exports["setClassName"] = $foreign.setClassName;
  exports["setAttribute"] = $foreign.setAttribute;
})(PS);
(function(exports) {
  "use strict";                                   

  exports.setTextContent = function (value) {
    return function (node) {
      return function () {
        node.textContent = value;
      };
    };
  };

  exports.appendChild = function (node) {
    return function (parent) {
      return function () {
        parent.appendChild(node);
      };
    };
  };
})(PS["Web.DOM.Node"] = PS["Web.DOM.Node"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Web.DOM.Node"] = $PS["Web.DOM.Node"] || {};
  var exports = $PS["Web.DOM.Node"];
  var $foreign = $PS["Web.DOM.Node"];
  exports["setTextContent"] = $foreign.setTextContent;
  exports["appendChild"] = $foreign.appendChild;
})(PS);
(function(exports) {
  "use strict";

  exports.create = function () {
    return new Image();
  };

  exports.setSrc = function (src) {
    return function (image) {
      return function () {
        image.src = src;
      };
    };
  };
})(PS["Web.HTML.HTMLImageElement"] = PS["Web.HTML.HTMLImageElement"] || {});
(function(exports) {
  "use strict";

  exports._unsafeReadProtoTagged = function (nothing, just, name, value) {
    if (typeof window !== "undefined") {
      var ty = window[name];
      if (ty != null && value instanceof ty) {
        return just(value);
      }
    }
    var obj = value;
    while (obj != null) {
      var proto = Object.getPrototypeOf(obj);
      var constructorName = proto.constructor.name;
      if (constructorName === name) {
        return just(value);
      } else if (constructorName === "Object") {
        return nothing;
      }
      obj = proto;
    }
    return nothing;
  };
})(PS["Web.Internal.FFI"] = PS["Web.Internal.FFI"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Web.Internal.FFI"] = $PS["Web.Internal.FFI"] || {};
  var exports = $PS["Web.Internal.FFI"];
  var $foreign = $PS["Web.Internal.FFI"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var unsafeReadProtoTagged = function (name) {
      return function (value) {
          return $foreign["_unsafeReadProtoTagged"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, name, value);
      };
  };
  exports["unsafeReadProtoTagged"] = unsafeReadProtoTagged;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Web.HTML.HTMLImageElement"] = $PS["Web.HTML.HTMLImageElement"] || {};
  var exports = $PS["Web.HTML.HTMLImageElement"];
  var $foreign = $PS["Web.HTML.HTMLImageElement"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Web_Internal_FFI = $PS["Web.Internal.FFI"];
  var toElement = Unsafe_Coerce.unsafeCoerce;                                      
  var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
  exports["fromElement"] = fromElement;
  exports["toElement"] = toElement;
  exports["create"] = $foreign.create;
  exports["setSrc"] = $foreign.setSrc;
})(PS);
(function($PS) {
  
  // SPDX-License-Identifier: MIT
  // Copyright (c) 2021 Chua Hou
  "use strict";
  $PS["Render"] = $PS["Render"] || {};
  var exports = $PS["Render"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Show = $PS["Data.Show"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Mahjong_Hand = $PS["Mahjong.Hand"];
  var Web_DOM_Element = $PS["Web.DOM.Element"];
  var Web_DOM_Node = $PS["Web.DOM.Node"];
  var Web_HTML_HTMLImageElement = $PS["Web.HTML.HTMLImageElement"];                

  // | Generates filename for a tile.
  var tileToFilename = function (t) {
      var go = function (v) {
          if (v instanceof Mahjong_Hand.Manzu) {
              return "Man" + Data_Show.show(Data_Show.showInt)(v.value0);
          };
          if (v instanceof Mahjong_Hand.Pinzu) {
              return "Pin" + Data_Show.show(Data_Show.showInt)(v.value0);
          };
          if (v instanceof Mahjong_Hand.Souzu) {
              return "Sou" + Data_Show.show(Data_Show.showInt)(v.value0);
          };
          if (v instanceof Mahjong_Hand.East) {
              return "Ton";
          };
          if (v instanceof Mahjong_Hand.South) {
              return "Nan";
          };
          if (v instanceof Mahjong_Hand.West) {
              return "Shaa";
          };
          if (v instanceof Mahjong_Hand.North) {
              return "Pei";
          };
          if (v instanceof Mahjong_Hand.White) {
              return "Haku";
          };
          if (v instanceof Mahjong_Hand.Green) {
              return "Hatsu";
          };
          if (v instanceof Mahjong_Hand.Red) {
              return "Chun";
          };
          throw new Error("Failed pattern match at Render (line 22, column 5 - line 22, column 35): " + [ v.constructor.name ]);
      };
      return go(t) + ".svg";
  };

  // | Creates image element for a tile.
  var createImage = function (t) {
      var fname = "./riichi-mahjong-tiles/Regular/" + tileToFilename(t);
      return function __do() {
          var elem = Web_HTML_HTMLImageElement.create();
          Web_HTML_HTMLImageElement.setSrc(fname)(elem)();
          var elem$prime = Web_HTML_HTMLImageElement.toElement(elem);
          Web_DOM_Element.setClassName("tile")(elem$prime)();
          return Web_DOM_Element.toNode(elem$prime);
      };
  };

  // | Renders a scenario, given a function to query nodes by id with.
  var renderScenario = function (q) {
      return function (s) {
        
          // Sets src of img to black variant of wind w.
  var setWind = function (w) {
              return function (img) {
                  return Web_HTML_HTMLImageElement.setSrc("./riichi-mahjong-tiles/Black/" + tileToFilename(w))(img);
              };
          };
        
          // Run query and perform effect on any returned element, doing nothing
          // otherwise.
  var q$prime = function (cs) {
              return function (f) {
                  return Control_Bind.bind(Effect.bindEffect)(q(cs))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(f));
              };
          };
        
          // Add tiles ts to div d.
  var addTiles = function (ts) {
              return function (d) {
                  var f = function (n) {
                      return function (x) {
                          return function __do() {
                              var v = n();
                              return Control_Bind.bind(Effect.bindEffect)(createImage(x))(Data_Function.flip(Web_DOM_Node.appendChild)(Web_DOM_Element.toNode(d)))();
                          };
                      };
                  };
                  return Data_Foldable.foldl(Data_Foldable.foldableArray)(f)(Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))(ts);
              };
          };
          return function __do() {
              q$prime("#bakaze")((function () {
                  var $9 = Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(setWind(s.bakaze));
                  return function ($10) {
                      return $9(Web_HTML_HTMLImageElement.fromElement($10));
                  };
              })())();
              q$prime("#jikaze")((function () {
                  var $11 = Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(setWind(s.jikaze));
                  return function ($12) {
                      return $11(Web_HTML_HTMLImageElement.fromElement($12));
                  };
              })())();
              q$prime("#dora")(addTiles(s.doras))();
              q$prime("#ura")((function () {
                  var $6 = Data_Array["null"](s.uras);
                  if ($6) {
                      return Web_DOM_Element.setAttribute("style")("visibility:hidden");
                  };
                  return addTiles(s.uras);
              })())();
              q$prime("#riibou")(Web_DOM_Element.setAttribute("style")("visibility:" + (function () {
                  if (s.riichi) {
                      return "visible";
                  };
                  return "hidden";
              })()))();
              return q$prime("#tsumoron")((function () {
                  var $13 = Web_DOM_Node.setTextContent((function () {
                      if (s.tsumo) {
                          return "TSUMO";
                      };
                      return "RON";
                  })());
                  return function ($14) {
                      return $13(Web_DOM_Element.toNode($14));
                  };
              })())();
          };
      };
  };
  exports["renderScenario"] = renderScenario;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Web.DOM.Document"] = $PS["Web.DOM.Document"] || {};
  var exports = $PS["Web.DOM.Document"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                      
  var toParentNode = Unsafe_Coerce.unsafeCoerce;
  exports["toParentNode"] = toParentNode;
})(PS);
(function(exports) {
  "use strict";                                               

  exports._querySelector = function (selector) {
    return function (node) {
      return function () {
        return node.querySelector(selector);
      };
    };
  };
})(PS["Web.DOM.ParentNode"] = PS["Web.DOM.ParentNode"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Web.DOM.ParentNode"] = $PS["Web.DOM.ParentNode"] || {};
  var exports = $PS["Web.DOM.ParentNode"];
  var $foreign = $PS["Web.DOM.ParentNode"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];
  var querySelector = function (qs) {
      var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
      var $1 = $foreign["_querySelector"](qs);
      return function ($2) {
          return $0($1($2));
      };
  };
  exports["querySelector"] = querySelector;
})(PS);
(function(exports) {
  "use strict";

  exports.window = function () {
    return window;
  };
})(PS["Web.HTML"] = PS["Web.HTML"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Web.HTML"] = $PS["Web.HTML"] || {};
  var exports = $PS["Web.HTML"];
  var $foreign = $PS["Web.HTML"];
  exports["window"] = $foreign.window;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Web.HTML.HTMLDocument"] = $PS["Web.HTML.HTMLDocument"] || {};
  var exports = $PS["Web.HTML.HTMLDocument"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];      
  var toDocument = Unsafe_Coerce.unsafeCoerce;
  exports["toDocument"] = toDocument;
})(PS);
(function(exports) {
  "use strict";

  exports.document = function (window) {
    return function () {
      return window.document;
    };
  };
})(PS["Web.HTML.Window"] = PS["Web.HTML.Window"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Web.HTML.Window"] = $PS["Web.HTML.Window"] || {};
  var exports = $PS["Web.HTML.Window"];
  var $foreign = $PS["Web.HTML.Window"];
  exports["document"] = $foreign.document;
})(PS);
(function($PS) {
  "use strict";
  $PS["Main"] = $PS["Main"] || {};
  var exports = $PS["Main"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];
  var Mahjong_Hand = $PS["Mahjong.Hand"];
  var Render = $PS["Render"];
  var Web_DOM_Document = $PS["Web.DOM.Document"];
  var Web_DOM_ParentNode = $PS["Web.DOM.ParentNode"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];                
  var main = function __do() {
      var doc = Data_Functor.map(Effect.functorEffect)(function ($0) {
          return Web_DOM_Document.toParentNode(Web_HTML_HTMLDocument.toDocument($0));
      })(Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.document))();
      var query = function (q) {
          return Web_DOM_ParentNode.querySelector(q)(doc);
      };
      return Render.renderScenario(query)({
          hand: new Mahjong_Hand.Hand(Mahjong_Hand.Ryanmen.create(new Mahjong_Hand.Manzu(2)), Mahjong_Hand.closed(Mahjong_Hand.Shuntsu.create(new Mahjong_Hand.Manzu(2))), Mahjong_Hand.closed(Mahjong_Hand.Shuntsu.create(new Mahjong_Hand.Manzu(3))), Mahjong_Hand.open(Mahjong_Hand.Shuntsu.create(new Mahjong_Hand.Manzu(4))), new Mahjong_Hand.Manzu(9)),
          bakaze: Mahjong_Hand.South.value,
          jikaze: Mahjong_Hand.West.value,
          doras: [ Mahjong_Hand.North.value, Mahjong_Hand.White.value ],
          uras: [  ],
          riichi: false,
          tsumo: false
      })();
  };
  exports["main"] = main;
})(PS);
PS["Main"].main();